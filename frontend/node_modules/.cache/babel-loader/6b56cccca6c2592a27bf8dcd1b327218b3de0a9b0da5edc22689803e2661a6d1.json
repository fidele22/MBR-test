{"ast":null,"code":"var _jsxFileName = \"/home/castro/Desktop/Mbrtestproject/mbrt-frontend/src/component/charts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorGraphs = () => {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const fetchSensorData = () => {\n    fetch(\"http://localhost:4000/api/sensor-data\").then(res => res.json()).then(data => {\n      setSensorData(prevData => {\n        const newData = data.map(entry => ({\n          ...entry,\n          timestamp: new Date(entry.timestamp).toLocaleTimeString() // Format time\n        }));\n\n        // Keep only the last 20 records for better visualization\n        return [...prevData, ...newData].slice(-20);\n      });\n    }).catch(err => console.error(\"Error fetching data:\", err));\n  };\n  useEffect(() => {\n    fetchSensorData(); // Initial fetch\n    const interval = setInterval(fetchSensorData, 2000); // Fetch data every 2 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Color Sensor Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: sensorData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"RGB.red\",\n          stroke: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"RGB.green\",\n          stroke: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"RGB.blue\",\n          stroke: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Photodiode Sensor (Light Intensity)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: sensorData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"lightIntensity\",\n          stroke: \"orange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combined Sensor Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: sensorData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"RGB.red\",\n          stroke: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"RGB.green\",\n          stroke: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"RGB.blue\",\n          stroke: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"lightIntensity\",\n          stroke: \"orange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorGraphs, \"1nhtCuo77g5P4S+mPowAJ6vh298=\");\n_c = SensorGraphs;\nexport default SensorGraphs;\nvar _c;\n$RefreshReg$(_c, \"SensorGraphs\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","SensorGraphs","_s","sensorData","setSensorData","fetchSensorData","fetch","then","res","json","data","prevData","newData","map","entry","timestamp","Date","toLocaleTimeString","slice","catch","err","console","error","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/home/castro/Desktop/Mbrtestproject/mbrt-frontend/src/component/charts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\n\nconst SensorGraphs = () => {\n  const [sensorData, setSensorData] = useState([]);\n\n  const fetchSensorData = () => {\n    fetch(\"http://localhost:4000/api/sensor-data\")\n      .then((res) => res.json())\n      .then((data) => {\n        setSensorData((prevData) => {\n          const newData = data.map(entry => ({\n            ...entry,\n            timestamp: new Date(entry.timestamp).toLocaleTimeString(), // Format time\n          }));\n          \n          // Keep only the last 20 records for better visualization\n          return [...prevData, ...newData].slice(-20);\n        });\n      })\n      .catch((err) => console.error(\"Error fetching data:\", err));\n  };\n\n  useEffect(() => {\n    fetchSensorData(); // Initial fetch\n    const interval = setInterval(fetchSensorData, 2000); // Fetch data every 2 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n\n  return (\n    <div>\n      <h2>Color Sensor Data</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <LineChart data={sensorData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"timestamp\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"RGB.red\" stroke=\"red\" />\n          <Line type=\"monotone\" dataKey=\"RGB.green\" stroke=\"green\" />\n          <Line type=\"monotone\" dataKey=\"RGB.blue\" stroke=\"blue\" />\n        </LineChart>\n      </ResponsiveContainer>\n\n      <h2>Photodiode Sensor (Light Intensity)</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <LineChart data={sensorData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"timestamp\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"lightIntensity\" stroke=\"orange\" />\n        </LineChart>\n      </ResponsiveContainer>\n\n      <h2>Combined Sensor Data</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <LineChart data={sensorData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"timestamp\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"RGB.red\" stroke=\"red\" />\n          <Line type=\"monotone\" dataKey=\"RGB.green\" stroke=\"green\" />\n          <Line type=\"monotone\" dataKey=\"RGB.blue\" stroke=\"blue\" />\n          <Line type=\"monotone\" dataKey=\"lightIntensity\" stroke=\"orange\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SensorGraphs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9G,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMe,eAAe,GAAGA,CAAA,KAAM;IAC5BC,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdN,aAAa,CAAEO,QAAQ,IAAK;QAC1B,MAAMC,OAAO,GAAGF,IAAI,CAACG,GAAG,CAACC,KAAK,KAAK;UACjC,GAAGA,KAAK;UACRC,SAAS,EAAE,IAAIC,IAAI,CAACF,KAAK,CAACC,SAAS,CAAC,CAACE,kBAAkB,CAAC,CAAC,CAAE;QAC7D,CAAC,CAAC,CAAC;;QAEH;QACA,OAAO,CAAC,GAAGN,QAAQ,EAAE,GAAGC,OAAO,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC;MAC7C,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC;EAED/B,SAAS,CAAC,MAAM;IACdgB,eAAe,CAAC,CAAC,CAAC,CAAC;IACnB,MAAMkB,QAAQ,GAAGC,WAAW,CAACnB,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC;;IAErD,OAAO,MAAMoB,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B9B,OAAA,CAACF,mBAAmB;MAACiC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5C1B,OAAA,CAACT,SAAS;QAACmB,IAAI,EAAEP,UAAW;QAAAuB,QAAA,gBAC1B1B,OAAA,CAACL,aAAa;UAACsC,eAAe,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvC9B,OAAA,CAACP,KAAK;UAACyC,OAAO,EAAC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7B9B,OAAA,CAACN,KAAK;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACT9B,OAAA,CAACJ,OAAO;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACX9B,OAAA,CAACH,MAAM;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACV9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,SAAS;UAACE,MAAM,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvD9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,WAAW;UAACE,MAAM,EAAC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3D9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,UAAU;UAACE,MAAM,EAAC;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,eAEtB9B,OAAA;MAAA0B,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C9B,OAAA,CAACF,mBAAmB;MAACiC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5C1B,OAAA,CAACT,SAAS;QAACmB,IAAI,EAAEP,UAAW;QAAAuB,QAAA,gBAC1B1B,OAAA,CAACL,aAAa;UAACsC,eAAe,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvC9B,OAAA,CAACP,KAAK;UAACyC,OAAO,EAAC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7B9B,OAAA,CAACN,KAAK;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACT9B,OAAA,CAACJ,OAAO;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACX9B,OAAA,CAACH,MAAM;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACV9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,gBAAgB;UAACE,MAAM,EAAC;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,eAEtB9B,OAAA;MAAA0B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B9B,OAAA,CAACF,mBAAmB;MAACiC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5C1B,OAAA,CAACT,SAAS;QAACmB,IAAI,EAAEP,UAAW;QAAAuB,QAAA,gBAC1B1B,OAAA,CAACL,aAAa;UAACsC,eAAe,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvC9B,OAAA,CAACP,KAAK;UAACyC,OAAO,EAAC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7B9B,OAAA,CAACN,KAAK;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACT9B,OAAA,CAACJ,OAAO;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACX9B,OAAA,CAACH,MAAM;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACV9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,SAAS;UAACE,MAAM,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvD9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,WAAW;UAACE,MAAM,EAAC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3D9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,UAAU;UAACE,MAAM,EAAC;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzD9B,OAAA,CAACR,IAAI;UAAC2C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,gBAAgB;UAACE,MAAM,EAAC;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAvEID,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAyElB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}