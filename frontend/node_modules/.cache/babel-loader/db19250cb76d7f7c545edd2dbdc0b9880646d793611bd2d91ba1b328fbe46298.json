{"ast":null,"code":"var _jsxFileName = \"/home/castro/Desktop/Mbrtestproject/mbrt-frontend/src/component/sampledata.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeIntervalsList = () => {\n  _s();\n  const [timeIntervals, setTimeIntervals] = useState([]);\n\n  // Fetch all sensor data on mount\n  const fetchAllIntervals = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/api/all-sensor-data\");\n      const data = await response.json();\n      let intervals = [];\n      for (let i = 1; i < data.length; i++) {\n        if (data[i].timeTaken === 0 && data[i - 1].timeTaken > 0) {\n          intervals.push(data[i - 1].timeTaken);\n        }\n      }\n      setTimeIntervals(intervals); // Store all found intervals\n    } catch (error) {\n      console.error(\"Error fetching intervals:\", error);\n    }\n  };\n\n  // Fetch intervals when component mounts\n  useEffect(() => {\n    fetchAllIntervals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scroll-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Previous Time Intervals:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAllIntervals,\n      className: \"refresh-btn\",\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"interval-list\",\n      children: timeIntervals.length > 0 ? timeIntervals.map((interval, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"interval-item\",\n        children: [interval.toFixed(2), \" seconds\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No intervals recorded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeIntervalsList, \"rORPg5mLj9vYbUF6pDumbeBJB6I=\");\n_c = TimeIntervalsList;\nexport default TimeIntervalsList;\nvar _c;\n$RefreshReg$(_c, \"TimeIntervalsList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TimeIntervalsList","_s","timeIntervals","setTimeIntervals","fetchAllIntervals","response","fetch","data","json","intervals","i","length","timeTaken","push","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","interval","index","toFixed","_c","$RefreshReg$"],"sources":["/home/castro/Desktop/Mbrtestproject/mbrt-frontend/src/component/sampledata.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './chart.css'\nconst TimeIntervalsList = () => {\n  const [timeIntervals, setTimeIntervals] = useState([]);\n\n  // Fetch all sensor data on mount\n  const fetchAllIntervals = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/api/all-sensor-data\");\n      const data = await response.json();\n\n      let intervals = [];\n      for (let i = 1; i < data.length; i++) {\n        if (data[i].timeTaken === 0 && data[i - 1].timeTaken > 0) {\n          intervals.push(data[i - 1].timeTaken);\n        }\n      }\n\n      setTimeIntervals(intervals); // Store all found intervals\n    } catch (error) {\n      console.error(\"Error fetching intervals:\", error);\n    }\n  };\n\n  // Fetch intervals when component mounts\n  useEffect(() => {\n    fetchAllIntervals();\n  }, []);\n\n  return (\n    <div className=\"scroll-box\">\n      <h3>Previous Time Intervals:</h3>\n      <button onClick={fetchAllIntervals} className=\"refresh-btn\">Refresh</button>\n      <ul className=\"interval-list\">\n        {timeIntervals.length > 0 ? (\n          timeIntervals.map((interval, index) => (\n            <li key={index} className=\"interval-item\">\n              {interval.toFixed(2)} seconds\n            </li>\n          ))\n        ) : (\n          <p>No intervals recorded</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default TimeIntervalsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACpB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;MACzE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIC,SAAS,GAAG,EAAE;MAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACpC,IAAIH,IAAI,CAACG,CAAC,CAAC,CAACE,SAAS,KAAK,CAAC,IAAIL,IAAI,CAACG,CAAC,GAAG,CAAC,CAAC,CAACE,SAAS,GAAG,CAAC,EAAE;UACxDH,SAAS,CAACI,IAAI,CAACN,IAAI,CAACG,CAAC,GAAG,CAAC,CAAC,CAACE,SAAS,CAAC;QACvC;MACF;MAEAT,gBAAgB,CAACM,SAAS,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACdQ,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBlB,OAAA;MAAAkB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCtB,OAAA;MAAQuB,OAAO,EAAElB,iBAAkB;MAACY,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5EtB,OAAA;MAAIiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1Bf,aAAa,CAACS,MAAM,GAAG,CAAC,GACvBT,aAAa,CAACqB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChC1B,OAAA;QAAgBiB,SAAS,EAAC,eAAe;QAAAC,QAAA,GACtCO,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,EAAC,UACvB;MAAA,GAFSD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC,gBAEFtB,OAAA;QAAAkB,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5CID,iBAAiB;AAAA2B,EAAA,GAAjB3B,iBAAiB;AA8CvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}